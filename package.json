{
  "name": "vuex-cognito-sync",
  "version": "0.4.2",
  "description": "A Vue.js Vuex module for AWS Cognito Sync",
  "main": "dist/index.js",
  "repository": "LightmakerCanada/vuex-cognito-sync",
  "author": "Adam Biggs <adam.biggs@lightmaker.com>",
  "license": "MIT",
  "dependencies": {
    "amazon-cognito-js": "^1.1.0",
    "aws-sdk": "^2.7.21",
    "vuex": "^2.1.1"
  },
  "devDependencies": {
    "ava": "^0.18.1",
    "babel-cli": "^6.23.0",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-polyfill": "^6.23.0",
    "babel-preset-env": "^1.1.8",
    "conventional-changelog-cli": "^1.2.0",
    "coveralls": "^2.11.16",
    "cross-env": "^3.1.4",
    "eslint": "^3.13.1",
    "eslint-config-standard": "^6.2.1",
    "eslint-plugin-ava": "^4.2.0",
    "eslint-plugin-promise": "^3.4.0",
    "eslint-plugin-standard": "^2.0.1",
    "nyc": "^10.1.2",
    "sinon": "^1.17.7",
    "tap-xunit": "^1.7.0"
  },
  "scripts": {
    "build": "cross-env BABEL_ENV=production babel src --out-dir dist",
    "build-watch": "cross-env BABEL_ENV=production babel src --out-dir dist --watch",
    "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0",
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "lint": "eslint src/**/*.js test/**/*.js",
    "prepublish": "npm run build",
    "preversion": "npm test",
    "test": "npm run lint && npm run unit",
    "test-ci": "npm run lint && nyc ava --tap | tap-xunit > $CIRCLE_TEST_REPORTS/ava/results.xml && npm run coveralls",
    "unit": "nyc ava",
    "unit-watch": "ava --watch",
    "version": "npm run changelog && git add CHANGELOG.md"
  },
  "ava": {
    "require": [
      "babel-register",
      "babel-polyfill"
    ],
    "babel": "inherit"
  },
  "babel": {
    "presets": [
      [
        "env",
        {
          "targets": {
            "browsers": [
              "last 2 versions",
              "> 1%"
            ]
          }
        }
      ]
    ],
    "plugins": [
      "transform-runtime"
    ],
    "env": {
      "development": {
        "sourceMaps": "inline"
      }
    }
  }
}
